name: Build and deploy Node.js app to Azure Web App - askhan-webapp

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  APP_NAME: askhan-webapp  # <-- make sure this matches your real app name
  ARTIFACT_NAME: node-app
  RUNTIME_DIR: .

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 20.x (LTS)
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install deps
        run: npm ci
        working-directory: ${{ env.RUNTIME_DIR }}

      - name: Build
        run: npm run build
        working-directory: ${{ env.RUNTIME_DIR }}

      # Create a slim deployable folder
      - name: Prepare artifact
        run: |
          rm -rf deploy
          mkdir -p deploy
          cp package.json package-lock.json deploy/
          cp -r dist deploy/
        working-directory: ${{ env.RUNTIME_DIR }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.RUNTIME_DIR }}/deploy

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ./deploy

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_005C1EF3127741B09F2050ED942CCFB3 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_D40F1D8C8EE44E2BA233E3CE6BB56F98 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_1A2DD9E669144382ABE9A6DF6E142954 }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.APP_NAME }}
          slot-name: 'production'
          package: ./deploy
